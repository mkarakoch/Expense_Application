{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkara\\\\OneDrive\\\\Desktop\\\\JS-HTML-CSS\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpenseAppItems.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItems\";\nimport Card from \"../UI/Card\";\nimport \"./Expense.css\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseAppItem(props) {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filtExp = props.items.filter(exp => {\n    return exp.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expNotFound = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No Expenses found \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }, this); // if (filtExp.length >= 0) {\n  //   expNotFound = filtExp.map((props) => (\n  //     <ExpenseItem\n  //       key={props.id}\n  //       title={props.title}\n  //       amount={props.amount}\n  //       date={props.date}\n  //     />\n  //   ));\n  // }\n\n\n  filtExp.length >= 0 ? expNotFound : filtExp.map(props => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n    title: props.title,\n    amount: props.amount,\n    date: props.date\n  }, props.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), expNotFound, filtExp.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No Expenses found \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 34\n      }, this), filtExp.length > 0 && filtExp.map(props => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: props.title,\n        amount: props.amount,\n        date: props.date\n      }, props.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseAppItem, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = ExpenseAppItem;\nexport default ExpenseAppItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseAppItem\");","map":{"version":3,"sources":["C:/Users/mkara/OneDrive/Desktop/JS-HTML-CSS/React/01-starting-setup/src/components/Expenses/ExpenseAppItems.js"],"names":["React","useState","ExpenseItem","Card","ExpenseFilter","ExpenseAppItem","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filtExp","items","filter","exp","date","getFullYear","toString","expNotFound","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,eAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,GAAD,IAAS;AAC1C,WAAOA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,OAAsCV,YAA7C;AACD,GAFe,CAAhB;;AAIA,MAAIW,WAAW,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlB,CAV6B,CAW7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAP,EAAAA,OAAO,CAACQ,MAAR,IAAkB,CAAlB,GACID,WADJ,GAEIP,OAAO,CAACS,GAAR,CAAad,KAAD,iBACV,QAAC,WAAD;AAEE,IAAA,KAAK,EAAEA,KAAK,CAACe,KAFf;AAGE,IAAA,MAAM,EAAEf,KAAK,CAACgB,MAHhB;AAIE,IAAA,IAAI,EAAEhB,KAAK,CAACS;AAJd,KACOT,KAAK,CAACiB,EADb;AAAA;AAAA;AAAA;AAAA,UADF,CAFJ;AAUA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,QAAQ,EAAEhB,YADZ;AAEE,QAAA,cAAc,EAAEE;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAMGS,WANH,EAQGP,OAAO,CAACQ,MAAR,KAAmB,CAAnB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAR3B,EASGR,OAAO,CAACQ,MAAR,GAAiB,CAAjB,IACCR,OAAO,CAACS,GAAR,CAAad,KAAD,iBACV,QAAC,WAAD;AAEE,QAAA,KAAK,EAAEA,KAAK,CAACe,KAFf;AAGE,QAAA,MAAM,EAAEf,KAAK,CAACgB,MAHhB;AAIE,QAAA,IAAI,EAAEhB,KAAK,CAACS;AAJd,SACOT,KAAK,CAACiB,EADb;AAAA;AAAA;AAAA;AAAA,cADF,CAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD;;GAvDQlB,c;;KAAAA,c;AAwDT,eAAeA,cAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItems\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expense.css\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\n\r\nfunction ExpenseAppItem(props) {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filtExp = props.items.filter((exp) => {\r\n    return exp.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expNotFound = <p> No Expenses found </p>;\r\n  // if (filtExp.length >= 0) {\r\n  //   expNotFound = filtExp.map((props) => (\r\n  //     <ExpenseItem\r\n  //       key={props.id}\r\n  //       title={props.title}\r\n  //       amount={props.amount}\r\n  //       date={props.date}\r\n  //     />\r\n  //   ));\r\n  // }\r\n\r\n  filtExp.length >= 0\r\n    ? expNotFound\r\n    : filtExp.map((props) => (\r\n        <ExpenseItem\r\n          key={props.id}\r\n          title={props.title}\r\n          amount={props.amount}\r\n          date={props.date}\r\n        />\r\n      ));\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n\r\n        {expNotFound}\r\n\r\n        {filtExp.length === 0 && <p> No Expenses found </p>}\r\n        {filtExp.length > 0 &&\r\n          filtExp.map((props) => (\r\n            <ExpenseItem\r\n              key={props.id}\r\n              title={props.title}\r\n              amount={props.amount}\r\n              date={props.date}\r\n            />\r\n          ))}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default ExpenseAppItem;\r\n"]},"metadata":{},"sourceType":"module"}